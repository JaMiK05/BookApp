// Generated by Dagger (https://dagger.dev).
package uz.gita.playmarketbookapp.presentation.allbooks;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.playmarketbookapp.domain.repository.AppRepository;
import uz.gita.playmarketbookapp.presentation.homescreen.HomeDirection;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AllBooksViewModel_Factory implements Factory<AllBooksViewModel> {
  private final Provider<HomeDirection> directionProvider;

  private final Provider<AppRepository> repositoryProvider;

  public AllBooksViewModel_Factory(Provider<HomeDirection> directionProvider,
      Provider<AppRepository> repositoryProvider) {
    this.directionProvider = directionProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public AllBooksViewModel get() {
    return newInstance(directionProvider.get(), repositoryProvider.get());
  }

  public static AllBooksViewModel_Factory create(Provider<HomeDirection> directionProvider,
      Provider<AppRepository> repositoryProvider) {
    return new AllBooksViewModel_Factory(directionProvider, repositoryProvider);
  }

  public static AllBooksViewModel newInstance(HomeDirection direction, AppRepository repository) {
    return new AllBooksViewModel(direction, repository);
  }
}
