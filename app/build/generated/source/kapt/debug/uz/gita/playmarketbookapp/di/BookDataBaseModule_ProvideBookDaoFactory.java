// Generated by Dagger (https://dagger.dev).
package uz.gita.playmarketbookapp.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.playmarketbookapp.data.local.room.dao.AppDao;
import uz.gita.playmarketbookapp.data.local.room.database.BookDatabase;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BookDataBaseModule_ProvideBookDaoFactory implements Factory<AppDao> {
  private final BookDataBaseModule module;

  private final Provider<BookDatabase> databaseProvider;

  public BookDataBaseModule_ProvideBookDaoFactory(BookDataBaseModule module,
      Provider<BookDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public AppDao get() {
    return provideBookDao(module, databaseProvider.get());
  }

  public static BookDataBaseModule_ProvideBookDaoFactory create(BookDataBaseModule module,
      Provider<BookDatabase> databaseProvider) {
    return new BookDataBaseModule_ProvideBookDaoFactory(module, databaseProvider);
  }

  public static AppDao provideBookDao(BookDataBaseModule instance, BookDatabase database) {
    return Preconditions.checkNotNullFromProvides(instance.provideBookDao(database));
  }
}
