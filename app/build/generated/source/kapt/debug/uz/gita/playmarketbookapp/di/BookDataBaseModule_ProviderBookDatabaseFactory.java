// Generated by Dagger (https://dagger.dev).
package uz.gita.playmarketbookapp.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.playmarketbookapp.data.local.room.database.BookDatabase;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BookDataBaseModule_ProviderBookDatabaseFactory implements Factory<BookDatabase> {
  private final BookDataBaseModule module;

  private final Provider<Context> contextProvider;

  public BookDataBaseModule_ProviderBookDatabaseFactory(BookDataBaseModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public BookDatabase get() {
    return providerBookDatabase(module, contextProvider.get());
  }

  public static BookDataBaseModule_ProviderBookDatabaseFactory create(BookDataBaseModule module,
      Provider<Context> contextProvider) {
    return new BookDataBaseModule_ProviderBookDatabaseFactory(module, contextProvider);
  }

  public static BookDatabase providerBookDatabase(BookDataBaseModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.providerBookDatabase(context));
  }
}
